package com.wechat.joker.tale.dao;

import com.wechat.joker.tale.pojo.Tusers;
import org.apache.ibatis.annotations.*;
import org.apache.ibatis.type.JdbcType;
import org.springframework.cache.annotation.CachePut;

@Mapper
public interface TusersMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_users
     *
     * @mbggenerated Thu Feb 14 15:35:09 CST 2019
     */
    @Delete({
        "delete from t_users",
        "where uid = #{uid,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer uid);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_users
     *
     * @mbggenerated Thu Feb 14 15:35:09 CST 2019
     */
    @Insert({
        "insert into t_users (uid, username, ",
        "password, email, ",
        "home_url, screen_name, ",
        "created, activated, ",
        "logged, group_name)",
        "values (#{uid,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, ",
        "#{password,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, ",
        "#{homeUrl,jdbcType=VARCHAR}, #{screenName,jdbcType=VARCHAR}, ",
        "#{created,jdbcType=INTEGER}, #{activated,jdbcType=INTEGER}, ",
        "#{logged,jdbcType=INTEGER}, #{groupName,jdbcType=VARCHAR})"
    })
    int insert(Tusers record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_users
     *
     * @mbggenerated Thu Feb 14 15:35:09 CST 2019
     */
    @InsertProvider(type=TusersSqlProvider.class, method="insertSelective")
    int insertSelective(Tusers record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_users
     *
     * @mbggenerated Thu Feb 14 15:35:09 CST 2019
     */
    @Select({
        "select",
        "uid, username, password, email, home_url, screen_name, created, activated, logged, ",
        "group_name",
        "from t_users",
        "where uid = #{uid,jdbcType=INTEGER}"
    })
    @Results({
        @Result(column="uid", property="uid", jdbcType= JdbcType.INTEGER, id=true),
        @Result(column="username", property="username", jdbcType= JdbcType.VARCHAR),
        @Result(column="password", property="password", jdbcType= JdbcType.VARCHAR),
        @Result(column="email", property="email", jdbcType= JdbcType.VARCHAR),
        @Result(column="home_url", property="homeUrl", jdbcType= JdbcType.VARCHAR),
        @Result(column="screen_name", property="screenName", jdbcType= JdbcType.VARCHAR),
        @Result(column="created", property="created", jdbcType= JdbcType.INTEGER),
        @Result(column="activated", property="activated", jdbcType= JdbcType.INTEGER),
        @Result(column="logged", property="logged", jdbcType= JdbcType.INTEGER),
        @Result(column="group_name", property="groupName", jdbcType= JdbcType.VARCHAR)
    })
    Tusers selectByPrimaryKey(Integer uid);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_users
     *
     * @mbggenerated Thu Feb 14 15:35:09 CST 2019
     */
    @UpdateProvider(type=TusersSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(Tusers record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_users
     *
     * @mbggenerated Thu Feb 14 15:35:09 CST 2019
     */
    @Update({
        "update t_users",
        "set username = #{username,jdbcType=VARCHAR},",
          "password = #{password,jdbcType=VARCHAR},",
          "email = #{email,jdbcType=VARCHAR},",
          "home_url = #{homeUrl,jdbcType=VARCHAR},",
          "screen_name = #{screenName,jdbcType=VARCHAR},",
          "created = #{created,jdbcType=INTEGER},",
          "activated = #{activated,jdbcType=INTEGER},",
          "logged = #{logged,jdbcType=INTEGER},",
          "group_name = #{groupName,jdbcType=VARCHAR}",
        "where uid = #{uid,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(Tusers record);
}